cài đặt: npx create-react-app my-app --template redux-typescript

Differences Between Type Aliases and Interfaces: https://www.typescriptlang.org/docs/handbook/2/everyday-types.html
Đối với interface có thể add thêm key. còn types thì không được

Thêm baseUrl": "./src" -> tsconfig : giúp cho sử dụng đường dẫn tuyệt đối
Thêm file .prettierrc

Trong redux-tool-kit:
useAppSelector: khi muốn lấy 1 giá trị từ redux
useAppDispatch: muốn dispatch 1 function

+ không phải cái handle action nào cũng đẩy lên Saga, chỉ những action có side effects

Phân biệt fork và spawn : https://redux-saga.js.org/docs/advanced/ForkModel/
fork: có lỗi => báo lên tk cha (main task).
spawn: có lỗi => ko báo lên tk cha.

+ Cài đặt axios
yarn add axios.
interceptor axios : nghĩa là mình muốn làm một số việc gì đó, trước khi gửi lên server.

https://viblo.asia/p/react-router-v6-gGJ59oVpZX2

shortkey: tsrpfc : export not default
tsdrpfc : export default.

* Nhớ thêm: Add CssBaseline vào index.tsx

Tìm hiểu flexFlow

==== 
Connected-react-router: thư viện giúp mình đồng bộ routing của mình vào redux-store.

==
Cài history : yarn add history@4.10.1

CM + K + W: đóng tất cả các cửa sổ
Option + Shift + 0: xoá import dư

+Phân tích Dashboard State+
= Phần trên: statistic
= Điểm cao nhất: hightest studentList và thấp nhất: lowest StudentList.
= rankingByCityList.

* Lưu ý về all: Nếu tất cả trong all là 
    + blocking thì nó là blocking
    + nonBlocking thì nó là nonBlocking

Xem thêm: https://redux-saga.js.org/docs/api#blocking--non-blocking

=== Để Box có thể padding và margin ta thêm:

const Box = styled.div<PaletteProps & SpacingProps & TypographyProps>`
  ${palette}${spacing}${typography}
`;

==== 29: cài đặt saga và slice.
ROUTING:
/admin/students: listing
/admin/students/add : add new
/admin/students/:studentId : update a student

LISTING:
- search by name
- Filter by city
- sort by nam, mark
- Pagination

student slice state:
- loading
- list
- pagination 
- filter { page: 1 limit: 10, ... }

ADD:
- React hook Form V7
- Yup

Trong router phải đưa
Student Add lên trước StudentId vì nếu ngược

- remove React strict mode => fix render useEffect 2 lần.

++ 31: Làm giao diện Pagination. : 
- yarn add @material-ui/lab.
totalPage = Math.ceil(totalRows / limit)
  totalRows: tổng số item - limit : số item trên 1 trang:
  Math.ceil : làm tròn. VD: 21 items / 10 item 1 trang = 21 / 10 = 2.1 -> làm tròn : 3

===== 34:
<OutlinedInput id="searchByName" label="Search by name" endAdornment={<Search />} />
phải có prop label để chừa ra đúng khỏang cách.

phải đợi user gõ xong mới đi search -> debouce.

Dùng debouce của Saga.

===== 40: React hook Form. 
+ Thư viện sử dụng cho Fucntional component
+ Sử dụng theo hướng tiếp cận Un control component -> Giúp giải quyết những bài toán liên quan đến performence
+ Isolate Re-renders 
